n, m = map(int, input().split()) # 화폐 종류 , 목표 비용
array = []
for i in range(n) :
    array.append(int(input()))

dp = [10001] * (m+1)
dp[0] = 0 # 초기 세팅, 해당 초기 세팅에 의해 인덱스 화폐가치 * n 인 값들이 세팅됨
for i in array :
    for j in range(i, m+1) :
        if dp[j - i] != 10001: # (i-k)원을 만드는 방법이 존재하는 경우
            dp[j] = min(dp[j], dp[j-array[i]]+1)

if dp[m] == 10001 :
    print(-1)
else :
    print(dp[m])


# *** 점화식 기억
# *** 주의
# [ 풀이 ]
# 문제 해결 아이디어
# Ai = 금액 i를 만들 수 있는 최소한의 화폐 개수
# K = 각 화폐의 단위
# 점화식
# 각 화폐 단위인 k를 하나씩 확인하며
# ㄴ Ai-k를 만드는 방법이 존재하는 경우, Ai = min(Ai, Ai-k+1)
# ㄴ Ai-k를 만드는 방법이 존재하지 않는 경우, Ai = INF <- 문제에 따라 특정 숫자가 될 수 있음
# 초기 세팅 매우 중요
